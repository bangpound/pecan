#!/usr/bin/env php
<?php

define('PECAN_NAME', 'pecan');
define('PECAN_VERSION', 'DEV');

if (is_dir($vendor = getcwd() . '/vendor')) {
    require $vendor . '/autoload.php';
}

if (is_dir($vendor = __DIR__ . '/../vendor')) {
    require($vendor . '/autoload.php');
} elseif (is_dir($vendor = __DIR__ . '/../../..')) {
    require($vendor . '/autoload.php');
} else {
    die(
        'You must set up the project dependencies, run the following commands:' . PHP_EOL .
        'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

$app = new \Symfony\Component\Console\Application(PECAN_NAME, PECAN_VERSION);

// Pecan\Shell wraps a standard Symfony Application object.
$shell = new \Pecan\Shell($app);

// Example callback for the data event.
$shell->on('data', function($line, \Pecan\Shell $shell) {
    $shell->write(sprintf('// in: %s', $line));
});

// Example callback for the exit event.
$shell->on('exit', function($code, \Pecan\Shell $shell) {
    $shell->emit('output', [
        [
            'Goodbye.',
            sprintf('// Shell exits with code %d', $code)
        ],
        true
    ]);
});

$loop = \React\EventLoop\Factory::create();

$shell->start($loop);

$loop->run();
